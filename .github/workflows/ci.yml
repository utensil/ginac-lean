name: GinacLean CI

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

permissions:
  contents: write

jobs:
  lean4:
    name: ginac-lean
    runs-on: ${{ matrix.platform.os }}
    defaults:
      run:
        shell: ${{ matrix.platform.shell }}
    strategy:
      matrix:
        platform:
          - os: ubuntu-latest
            arch: x86_64
            shell: bash
          - os: macos-latest
            arch: x86_64
            shell: bash
          - os: windows-latest
            arch: x86_64
            shell: "msys2 {0}"
            msystem: clang64
            msys-env: mingw-w64-clang-x86_64
      fail-fast: false
    env:
      GH_TOKEN: ${{ github.token }}
    #   SHELLOPTS: igncr
    steps:
      - name: Install elan on Ubuntu and macOS
        if: runner.os == 'Linux' || runner.os == 'macOS'
        shell: bash -euo pipefail {0}
        run: |
          curl -sSfL https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh | sh -s -- -y --default-toolchain none
          echo "$HOME/.elan/bin" >> $GITHUB_PATH
      - name: Install elan on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          curl -O --location https://raw.githubusercontent.com/leanprover/elan/master/elan-init.ps1
          .\elan-init.ps1 -NoPrompt 1 -DefaultToolchain none
          echo "$HOME\.elan\bin" >> $env:GITHUB_PATH
      - name: Install msys2 toolchain (Windows)
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          msystem: ${{ matrix.platform.msystem }}
          cache: false
          install: >-
            git
            base-devel
            autoconf
            automake
            libtool
            ${{ matrix.platform.msys-env }}-clang
            ${{ matrix.platform.msys-env }}-toolchain
            ${{ matrix.platform.msys-env }}-lld
          pacboy: >-
            libc++:p
            libc++abi:p
            libunwind:p
      - name: Setup Bash (Windows)
        if: runner.os == 'Windows'
        run: |
          # Following https://github.com/drivendataorg/cookiecutter-data-science/pull/319
          # See also https://github.com/actions/runner-images/issues/7218
          # Set bash executable explicitly since lake may pick wrong shell
          echo "BASH_EXECUTABLE=C:\msys64\usr\bin\bash" >> "$GITHUB_ENV"
      # Following https://github.com/axboe/fio/blob/master/.github/workflows/ci.yml
      - name: git config line endings (Windows)
        if: runner.os == 'Windows'
        run: git config --global core.autocrlf input
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4.6.1
        with:
          python-version: 3.11
      - name: Set up cache for deps
        uses: actions/cache@v3
        with:
          path: .lake
          key: cache-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            cache-${{ runner.os }}-
      - name: package install
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            sudo apt update
            sudo apt install -y curl wget git git-lfs clang lld libc++-dev
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            echo "Running on macOS"
          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            echo "Running on Windows"
          else
            echo "Unsupported OS"
          fi
      # - name: pip install
      #   run: |
      #     pip install -r codegen/requirements.txt -r codegen/requirements-dev.txt -r codegen/requirements-tests.txt
      # - name: run pre-commit
      #   run: |
      #     pre-commit run --all-files
      # - name: build ginac
      #   run: |
      #     bash scripts/build_ginac.sh
      # - name: run codegen tests
      #   run: |
      #     pytest codegen/tests
      # - name: check ginac
      #   run: |
      #     # Not all tests are passing on mac for now
      #     if [[ "${{ matrix.platform.os }}" == "ubuntu-latest" ]]; then
      #       bash scripts/check_ginac.sh
      #     fi
      # Use `lake run clear` to avoid cache causing unclean build
      - name: lake build
        run: |
          export PATH="$HOME/.elan/bin:$PATH"
          lake run clear
          lake build
      - name: lake upload
        if: github.event_name == 'release'
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            # lake upload reports "tar: .: file changed as we read it" on Ubuntu
            # https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/lake.20upload.20for.20Cloud.20Release
            tar -c -z --exclude=*.tar.gz --exclude=*.tar.gz.trace -f /tmp/linux-64.tar.gz -C ./build .
            gh release upload ${{ github.ref_name }} /tmp/linux-64.tar.gz --clobber
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            lake upload ${{ github.ref_name }}
          else
            echo "Unsupported OS"
          fi

      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v1
      #   with:
      #     path: ./dist

  # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: lean4
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v1
